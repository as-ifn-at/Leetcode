class MyQueue {
public:
    MyQueue() {
        ios_base::sync_with_stdio(false);
        cin.tie(nullptr);
        cout.tie(nullptr);
    }
    
    stack<int> ip;
    stack<int> op;
    
    void push(int x) {
        ip.push(x);
    }
    
    int pop() {
        
        if(!op.empty()) {
            int x=op.top();
            op.pop();
            return x;
        }
        else {
            while(!ip.empty()) {
                op.push(ip.top());
                ip.pop();
            }
            int x=op.top();
            op.pop();
            return x;
        }   
    }
    
    int peek() {
          if(!op.empty()) {
            // int x=op.top();
            // //op.pop();
            return op.top();
        }
        else {
            while(!ip.empty()) {
                op.push(ip.top());
                ip.pop();
            }
            
            // int x=op.top();
            // //op.pop();
            return op.top();
        }     
    }
    
    bool empty() {
        return (ip.empty() && op.empty());
    }
};

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue* obj = new MyQueue();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->peek();
 * bool param_4 = obj->empty();
 */